<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>28mm.github.io</title>
    <description>Discursions</description>
    <link>http://localhost:4000</link>
    
      
        <item>
          <title>The Bechdel Test, FiveThirtyEight, Rotten Tomatoes</title>
          <description>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/bechdel/style.css&quot; /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;div id=&quot;bechdel-1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Each point in this figure represents one of the top 50 grossing films of 2016, positioned to reflect the number of positive reviews it recieved from top critics (x-axis), and negative reviews (y-axis), both according to &lt;a href=&quot;https://www.rottentomatoes.com/&quot;&gt;Rotten Tomatoes&lt;/a&gt;.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Points are further colored to reflect whether the film passes the &lt;a href=&quot;https://bechdeltest.com&quot;&gt;Bechdel Test&lt;/a&gt;.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Mouseover any point to see the film’s name, and additional details.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fivethirtyeight.com&quot;&gt;FiveThirtyEight&lt;/a&gt; recently published a &lt;a href=&quot;https://projects.fivethirtyeight.com/next-bechdel/&quot;&gt;revisitation of the Bechdel Test&lt;/a&gt;&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;–a litmus for Womens’ representation in film–in which they invited contributors to re-imagine the test, using new criteria.&lt;/p&gt;

&lt;p&gt;The canonical Bechdel Test asks whether a film counts at least two named female characters in its cast, and whether they converse about subjects other than men. A rather low bar!&lt;/p&gt;

&lt;p&gt;FiveThirtyEight’s proposed variants consider the representation of other groups (e.g. Latinas), the role of female supporting cast, and the makeup of the film’s crew.&lt;/p&gt;

&lt;p&gt;How does a film’s performance on the Bechdel Test compare with its critical reception? FiveThirtyEight scored the top-50 grossing films of 2016, on each of its Bechdel Test variants. This post joins those data with critical scores collected from Rotten Tomatoes.&lt;/p&gt;

&lt;h3 id=&quot;rotten-tomatoes-and-critical-opinion&quot;&gt;Rotten Tomatoes and Critical Opinion&lt;/h3&gt;

&lt;p&gt;Do top critics–those who write for large audiences, according to Rotten Tomatoes–prefer films that pass the Bechdel Test? Do they not? This sample suggests little preference, either way.&lt;/p&gt;

&lt;div id=&quot;bechdel-2&quot;&gt;&lt;/div&gt;

&lt;p&gt;What if a more inclusive sample of critics is consulted? Again, little preference is shown.&lt;/p&gt;

&lt;div id=&quot;bechdel-3&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;critical-consensus&quot;&gt;Critical Consensus&lt;/h3&gt;

&lt;p&gt;It’s also worth wondering how well the two groups of critics agree, in general, since the ability to choose between them is a prominant feature of Rotten Tomatoes.&lt;/p&gt;

&lt;div id=&quot;bechdel-4&quot;&gt;&lt;/div&gt;

&lt;p&gt;They agree fairly well, at least for these 50 commercially successful films.&lt;/p&gt;

&lt;h3 id=&quot;variations-of-the-bechdel-test&quot;&gt;Variations of the Bechdel Test&lt;/h3&gt;

&lt;p&gt;What about FiveThirtyEight’s proposed Bechdel Test variations? Select a variant from the menu below to update the graph. For descriptions of each test, see &lt;a href=&quot;https://projects.fivethirtyeight.com/next-bechdel/&quot;&gt;the article&lt;/a&gt; on FiveThirtyEight.&lt;/p&gt;

&lt;p&gt;&lt;select onchange=&quot;testchange()&quot; id=&quot;testselect&quot;&gt;
	&lt;option value=&quot;bechdel&quot;&gt;Bechdel&lt;/option&gt;
	&lt;option value=&quot;peirce&quot; selected=&quot;selected&quot;&gt;Peirce&lt;/option&gt;
	&lt;option value=&quot;landau&quot;&gt;Landua&lt;/option&gt;
	&lt;option value=&quot;feldman&quot;&gt;Feldman&lt;/option&gt;
	&lt;option value=&quot;villareal&quot;&gt;Villareal&lt;/option&gt;
	&lt;option value=&quot;hagen&quot;&gt;Hagen&lt;/option&gt;
	&lt;option value=&quot;ko&quot;&gt;Ko&lt;/option&gt;
	&lt;option value=&quot;villarobos&quot;&gt;Villarobos&lt;/option&gt;
	&lt;option value=&quot;waithe&quot;&gt;Waithe&lt;/option&gt;
	&lt;option value=&quot;koeze_dottle&quot;&gt;Koeze-Dottle&lt;/option&gt;
	&lt;option value=&quot;uphold&quot;&gt;Uphold&lt;/option&gt;
	&lt;option value=&quot;white&quot;&gt;White&lt;/option&gt;
	&amp;lt;option value=rees_davies&amp;gt;Rees-Davies&amp;lt;/option&amp;gt;
&lt;/select&gt;&lt;/p&gt;

&lt;div id=&quot;bechdel-5&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The Bechdel Test, and its variations are a useful litmus to use when selecting a film. Combined with critical consensus, it offers a convenient means of avoiding the worst and most redundant films of the year.&lt;/p&gt;

&lt;p&gt;Nevertheless, It’s worth noting that the Bechdel Test alone is no guaruntee of quality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comment&lt;/strong&gt; and &lt;strong&gt;Suggestion&lt;/strong&gt; to &lt;strong&gt;&lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://d3js.org/d3-geo.v1.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/d3-tip.js&quot;&gt;&lt;/script&gt;

&lt;!--&lt;script src=&quot;/assets/bechdel/bechdel.js&quot;&gt;&lt;/script&gt;--&gt;

&lt;script&gt;
var b1 = function(selector) {
// set the dimensions and margins of the graph
var margin = {top: 20, right: 20, bottom: 45, left: 55},
    width = 500 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// set the ranges
var x = d3.scaleLinear().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

// append the svg obgect to the body of the page
// appends a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svg = d3.select(selector).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
  .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
          &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// Get the data
d3.csv(&quot;/assets/bechdel/bechdel.csv&quot;, function(error, data) {
  if (error) throw error;

  // format the data
  data.forEach(function(d) {
      d.top_up   = +d.top_up;
      d.top_down = +d.top_down;
      d.bechdel  = (+d.bechdel == 0) ? true : false;
  });

  // Scale the range of the data
  x.domain(d3.extent(data, function(d) { return d.top_up; }));
  y.domain(d3.extent(data, function(d) { return d.top_down; }));

  var color = d3.scaleOrdinal(d3['schemeCategory10']);

  // setup tooltips
  var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10, 0])
      .html(function (d) {
          return '&lt;span class=&quot;t&quot;&gt;' + d.movie + ': ' + d.top_critics + '%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;t&quot;&gt;Bechdel Test: ' + ((d.bechdel) ? &quot;passed&quot; : &quot;failed&quot;) + '&lt;/span&gt;';
      });
  svg.call(tip);


  
  // Add the scatterplot
  svg.selectAll(&quot;dot&quot;)
      .data(data)
    .enter().append(&quot;circle&quot;)
      .attr(&quot;r&quot;, 6)
      .attr(&quot;cx&quot;, function(d) { return x(d.top_up); })
      .attr(&quot;cy&quot;, function(d) { return y(d.top_down); })
      .attr(&quot;fill&quot;, function(d) { return color(d.bechdel); } )
      .attr(&quot;opacity&quot;, 0.75)
      .on('mouseover', tip.show)
      .on('mouseout', tip.hide);

  // Add the X Axis
  svg.append(&quot;g&quot;)
      .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
      .call(d3.axisBottom(x));

  // Add the Y Axis
  svg.append(&quot;g&quot;)
      .call(d3.axisLeft(y));

  // text label for the x axis
  svg.append(&quot;text&quot;)             
      .attr(&quot;transform&quot;,
            &quot;translate(&quot; + (width/2) + &quot; ,&quot; + 
                           (height + margin.top + 20) + &quot;)&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Positive Reviews (Top Critics)&quot;);

   });


  // text label for the y axis
  svg.append(&quot;text&quot;)
      .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
      .attr(&quot;y&quot;, 0 - margin.left)
      .attr(&quot;x&quot;,0 - (height / 2))
      .attr(&quot;dy&quot;, &quot;1em&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Negative Reviews&quot;);      
};


b1(&quot;#bechdel-1&quot;);
b1(&quot;#bechdel-2&quot;)

var b2 = function(selector) {
// set the dimensions and margins of the graph
var margin = {top: 20, right: 20, bottom: 45, left: 55},
    width = 500 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// set the ranges
var x = d3.scaleLinear().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

// append the svg obgect to the body of the page
// appends a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svg = d3.select(selector).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
  .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
          &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// Get the data
d3.csv(&quot;/assets/bechdel/bechdel.csv&quot;, function(error, data) {
  if (error) throw error;

  // format the data
  data.forEach(function(d) {
      d.all_up   = +d.all_up -d.top_up;
      d.all_down = +d.all_down -d.top_down;
      d.bechdel  = (+d.bechdel == 0) ? true : false;
  });

  // Scale the range of the data
  x.domain(d3.extent(data, function(d) { return d.all_up; }));
  y.domain(d3.extent(data, function(d) { return d.all_down; }));

  var color = d3.scaleOrdinal(d3['schemeCategory10']);


  // setup tooltips
  var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10, 0])
      .html(function (d) {
          return '&lt;span class=&quot;t&quot;&gt;' + d.movie + ': ' + d.all_critics + '%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;t&quot;&gt;Bechdel Test: ' + ((d.bechdel) ? &quot;passed&quot; : &quot;failed&quot;) + '&lt;/span&gt;';
      });
  svg.call(tip);

  // Add the scatterplot
  svg.selectAll(&quot;dot&quot;)
      .data(data)
    .enter().append(&quot;circle&quot;)
      .attr(&quot;r&quot;, 6)
      .attr(&quot;cx&quot;, function(d) { return x(d.all_up); })
      .attr(&quot;cy&quot;, function(d) { return y(d.all_down); })
      .attr(&quot;fill&quot;, function(d) { return color(d.bechdel); } )
      .attr(&quot;opacity&quot;, 0.75)
      .on('mouseover', tip.show)
      .on('mouseout', tip.hide);

  // Add the X Axis
  svg.append(&quot;g&quot;)
      .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
      .call(d3.axisBottom(x));

  // Add the Y Axis
  svg.append(&quot;g&quot;)
      .call(d3.axisLeft(y));

  // text label for the x axis
  svg.append(&quot;text&quot;)             
      .attr(&quot;transform&quot;,
            &quot;translate(&quot; + (width/2) + &quot; ,&quot; + 
                           (height + margin.top + 20) + &quot;)&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Positive Reviews (All Critics)&quot;);

   });


  // text label for the y axis
  svg.append(&quot;text&quot;)
      .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
      .attr(&quot;y&quot;, 0 - margin.left)
      .attr(&quot;x&quot;,0 - (height / 2))
      .attr(&quot;dy&quot;, &quot;1em&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Negative Reviews&quot;);      
};


b2(&quot;#bechdel-3&quot;);



var b3 = function(selector) {
// set the dimensions and margins of the graph
var margin = {top: 20, right: 20, bottom: 45, left: 55},
    width = 500 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// set the ranges
var x = d3.scaleLinear().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

// append the svg obgect to the body of the page
// appends a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svg = d3.select(selector).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
  .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
          &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// Get the data
d3.csv(&quot;/assets/bechdel/bechdel.csv&quot;, function(error, data) {
  if (error) throw error;

  // format the data
  data.forEach(function(d) {
      d.top_critics   = +d.top_critics;
      d.all_critics = +d.all_critics;
      d.bechdel  = (+d.bechdel == 0) ? true : false;
  });

  // Scale the range of the data
  x.domain([0, 100]);
  y.domain([0, 100]);

  var color = d3.scaleOrdinal(d3['schemeCategory10']);


  // setup tooltips
  var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10, 0])
      .html(function (d) {
          return '&lt;span class=&quot;t&quot;&gt;' + d.movie + ': ' + d.all_critics + '%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;t&quot;&gt;Bechdel Test: ' + ((d.bechdel) ? &quot;passed&quot; : &quot;failed&quot;) + '&lt;/span&gt;';
      });
  svg.call(tip);

  // Add the scatterplot
  svg.selectAll(&quot;dot&quot;)
      .data(data)
    .enter().append(&quot;circle&quot;)
      .attr(&quot;r&quot;, 6)
      .attr(&quot;cx&quot;, function(d) { return x(d.top_critics); })
      .attr(&quot;cy&quot;, function(d) { return y(d.all_critics); })
      .attr(&quot;fill&quot;, function(d) { return color(d.bechdel); } )
      .attr(&quot;opacity&quot;, 0.75)
      .on('mouseover', tip.show)
      .on('mouseout', tip.hide);

  // Add the X Axis
  svg.append(&quot;g&quot;)
      .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
      .call(d3.axisBottom(x));

  // Add the Y Axis
  svg.append(&quot;g&quot;)
      .call(d3.axisLeft(y));

  // text label for the x axis
  svg.append(&quot;text&quot;)             
      .attr(&quot;transform&quot;,
            &quot;translate(&quot; + (width/2) + &quot; ,&quot; + 
                           (height + margin.top + 20) + &quot;)&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Top Critics (% Positive)&quot;);

   });

  // text label for the y axis
  svg.append(&quot;text&quot;)
      .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
      .attr(&quot;y&quot;, 0 - margin.left)
      .attr(&quot;x&quot;,0 - (height / 2))
      .attr(&quot;dy&quot;, &quot;1em&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;All Critics (% Positive)&quot;);      
};


b3(&quot;#bechdel-4&quot;);

//
//



var b5 = function(selector) {
// set the dimensions and margins of the graph
var margin = {top: 20, right: 20, bottom: 45, left: 55},
    width = 500 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// set the ranges
var x = d3.scaleLinear().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

// append the svg obgect to the body of the page
// appends a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svg = d3.select(selector).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
  .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
          &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// Get the data
d3.csv(&quot;/assets/bechdel/bechdel.csv&quot;, function(error, data) {
  if (error) throw error;

  // format the data
  data.forEach(function(d) {
      d.top_critics   = +d.top_critics;
      d.all_critics = +d.all_critics;
      d.bechdel  = (+d.bechdel == 0) ? true : false;
      d.peirce  = (+d.peirce == 0) ? true : false;
      d.landau  = (+d.landau == 0) ? true : false;
      d.feldman  = (+d.feldman == 0) ? true : false;
      d.villareal  = (+d.villareal == 0) ? true : false;
      d.hagen  = (+d.hagen == 0) ? true : false;
      d.ko  = (+d.ko == 0) ? true : false;
      d.villarobos  = (+d.villarobos == 0) ? true : false;
      d.waithe  = (+d.waithe == 0) ? true : false;
      d.koeze_dottle  = (+d.koeze_dottle == 0) ? true : false;
      d.uphold  = (+d.uphold == 0) ? true : false;
      d.white  = (+d.white == 0) ? true : false;
      d.rees_davies  = (+d['rees-davis'] == 0) ? true : false;
  });

  // Scale the range of the data
  x.domain([0, 100]);
  y.domain([0, 100]);

  var color = d3.scaleOrdinal(d3['schemeCategory10']);


  testchange = function() {
    var e = document.getElementById(&quot;testselect&quot;);
    var test = e.options[e.selectedIndex].value;
    console.log(e.options[e.selectedIndex].text);

    svg.selectAll(&quot;circle&quot;).data([]).exit().remove();


  // setup tooltips
  var tip = d3.tip()
      .attr('class', 'd3-tip')
      .offset([-10, 0])
      .html(function (d) {
          return '&lt;span class=&quot;t&quot;&gt;' + d.movie + ': ' + d.all_critics + '%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;t&quot;&gt;' + test + ' test: ' + ((d[test]) ? &quot;passed&quot; : &quot;failed&quot;) + '&lt;/span&gt;';
      });
  svg.call(tip);

    svg.selectAll(&quot;dot&quot;)
      .data(data)
      .enter()
      .append(&quot;circle&quot;)
      .attr(&quot;r&quot;, 6)
      .attr(&quot;cx&quot;, function(d) { return x(d.top_critics); })
      .attr(&quot;cy&quot;, function(d) { return y(d.all_critics); })
      .attr(&quot;fill&quot;, function(d) { return color(d[test]); } )
      .attr(&quot;opacity&quot;, 0.75)
      .on('mouseover', tip.show)
      .on('mouseout', tip.hide);
      

}

      testchange();

  // Add the X Axis
  svg.append(&quot;g&quot;)
      .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
      .call(d3.axisBottom(x));

  // Add the Y Axis
  svg.append(&quot;g&quot;)
      .call(d3.axisLeft(y));

  // text label for the x axis
  svg.append(&quot;text&quot;)             
      .attr(&quot;transform&quot;,
            &quot;translate(&quot; + (width/2) + &quot; ,&quot; + 
                           (height + margin.top + 20) + &quot;)&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;Top Critics (% Positive)&quot;);

   });

  // text label for the y axis
  svg.append(&quot;text&quot;)
      .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
      .attr(&quot;y&quot;, 0 - margin.left)
      .attr(&quot;x&quot;,0 - (height / 2))
      .attr(&quot;dy&quot;, &quot;1em&quot;)
      .style(&quot;text-anchor&quot;, &quot;middle&quot;)
      .style(&quot;font-weight&quot;, &quot;bold&quot;)
      .text(&quot;All Critics (% Positive)&quot;);

};


b5(&quot;#bechdel-5&quot;);




&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.rottentomatoes.com/&quot;&gt;https://www.rottentomatoes.com/&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://bechdeltest.com/&quot;&gt;http://bechdeltest.com/&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://projects.fivethirtyeight.com/next-bechdel/&quot;&gt;https://projects.fivethirtyeight.com/next-bechdel/&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-12-25T23:00:01-08:00</pubDate>
          <link>http://localhost:4000/notes/bechdel-test</link>
          <guid isPermaLink="true">http://localhost:4000/notes/bechdel-test</guid>
        </item>
      
    
      
        <item>
          <title>IP Geolocation with ICMP Part 1</title>
          <description>&lt;!--&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/terraform-graphs-3/style.css&quot;&gt;--&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/echo-locate-1/style.css&quot; /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;Network latency is a measure of time, but also a proxy for distance. Using this property, it’s possible to geolocate a server by measuring the round-trip-time (rtt) of packets sent from multiple locations. This post explores that idea, using the AWS public cloud.&lt;/p&gt;

&lt;div id=&quot;example1&quot;&gt;&lt;/div&gt;

&lt;p&gt;As an illustration, mouseover one of the datacenters in the above figure to see how far it’s requests may have travelled to reach &lt;a href=&quot;https://www.washington.edu&quot;&gt;www.washington.edu&lt;/a&gt; (whose servers are presumably in Seattle, or nearby).&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I became intested in this topic after reading the the apocryphal &lt;em&gt;&lt;a href=&quot;https://www.ibiblio.org/harris/500milemail.html&quot;&gt;case of the 500-mile email&lt;/a&gt;,&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; which concerns a &lt;em&gt;Sendmail&lt;/em&gt; administrator, in Durham, North Carolina, whose users complain that they cannot send email farther than 500 miles. A preposterous limitation.&lt;/p&gt;

&lt;div id=&quot;example2&quot;&gt;&lt;/div&gt;

&lt;p&gt;He determines that &lt;em&gt;Sendmail&lt;/em&gt; is aborting connections that take longer than 3 milliseconds to establish. Recalling that the speed of light is 2.998e+8 m/s, 3 ms equates to roughly 560 miles. Roughly the distance cited in the users’ reports!&lt;/p&gt;

&lt;p&gt;I’ve always liked this story; I suspect because computer networks are often very abstract, and layer 1 can feel a long way down. Revisiting it recently, I began thinking about other uses of the same principle, and geolocation in particular.&lt;/p&gt;

&lt;h3 id=&quot;a-first-experiment&quot;&gt;A First Experiment&lt;/h3&gt;

&lt;p&gt;I am writing this from a desk in Seattle, but what if I didn’t know that? Could I establish my own location if I were amnesiac and unwilling to ask? What if I only had &lt;em&gt;Ping&lt;/em&gt; and a map of the world?&lt;/p&gt;

&lt;p&gt;To get started I borrowed a list of public IP addresses associated with various AWS regions from the &lt;em&gt;&lt;a href=&quot;https://ec2-reachability.amazonaws.com&quot;&gt;EC2 Reachability Test&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt;, and plotted the distance suggested by the least measured rtt from my desk to each one.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;div id=&quot;experiment1&quot;&gt;&lt;/div&gt;

&lt;p&gt;This experiment places me within 921 miles of AWS’ us-west-2 region. An answer that’s neither wrong, precise, nor all that bad.&lt;/p&gt;

&lt;h3 id=&quot;around-the-world-in-6912e9-milliseconds&quot;&gt;Around The World In 6.912e+9 Milliseconds&lt;/h3&gt;

&lt;p&gt;The global presence of cloud services like AWS, GCP, and Azure makes it both inexpensive and convenient to test latency from various points around the world.&lt;/p&gt;

&lt;p&gt;The map below presents a sample of datacenters from AWS and Google Cloud Platform with the caveat that they may be slightly misplaced, because their precise locations aren’t always known. (Or, aren’t known to &lt;em&gt;me&lt;/em&gt;.)&lt;/p&gt;

&lt;div id=&quot;example3&quot;&gt;&lt;/div&gt;

&lt;p&gt;What’s needed, now, is a mechanism for launching vm instances in a selection of these datacenters. &lt;em&gt;&lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt;&lt;/em&gt;&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; provides this, serving as a kind of &lt;em&gt;Make&lt;/em&gt; for cloud infrastructure; and one that supports multiple vendors.&lt;/p&gt;

&lt;p&gt;In a follow-up post, I’ll pursue this idea, using Terraform to manage instances in multiple public clouds at once, to measure latency from various points around the world. &lt;em&gt;Stay tuned…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comment&lt;/strong&gt; and &lt;strong&gt;Suggestion&lt;/strong&gt; to &lt;strong&gt;&lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://d3js.org/d3-geo.v1.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/d3-tip.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/example-1.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/example-2.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/example-3.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/echo-locate-1/experiment-1.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
// use the oldest version of svg_activate
example1('div#example1', 
    '/assets/echo-locate-1/world-map.json');
example2('div#example2', 
    '/assets/echo-locate-1/usa-map.json');
experiment1('div#experiment1', 
    '/assets/echo-locate-1/world-map.json');
example3('div#example3',
    '/assets/echo-locate-1/world-map.json');

&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.ibiblio.org/harris/500milemail.html&quot;&gt;https://www.ibiblio.org/harris/500milemail.html&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://ec2-reachability.amazonaws.com&quot;&gt;http://ec2-reachability.amazonaws.com&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;I am using the speed of light in a vacuum (&lt;em&gt;c&lt;/em&gt;) multiplied by 2/3 to correct for its slower passage through fiber optic media.&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;I’ve written about Terraform in two previous posts: &lt;a href=&quot;https://28mm.github.io/notes/d3-terraform-graphs&quot;&gt;part one&lt;/a&gt;, &lt;a href=&quot;https://28mm.github.io/notes/d3-terraform-graphs-2&quot;&gt;part two&lt;/a&gt;, &lt;a href=&quot;/notes/terraform-graphs-3&quot;&gt;part three&lt;/a&gt;. The project that resulted from these posts is called &lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt;, and is available on GitHub.&amp;nbsp;&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-12-02T23:00:01-08:00</pubDate>
          <link>http://localhost:4000/notes/echo-location</link>
          <guid isPermaLink="true">http://localhost:4000/notes/echo-location</guid>
        </item>
      
    
      
        <item>
          <title>Exploring Terraform Graphs With D3.js Part 3</title>
          <description>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/terraform-graphs-3/style.css&quot; /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;This is the third in a series of posts exploring methods of visualizing Terraform dependency graphs, with the goal of producing a tool useful for learning and documentation.&lt;/p&gt;

&lt;div id=&quot;demo1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Above is a representative example. Roll your mouse over one of the nodes to see its definition and to highlight its dependencies. For further information, refer to &lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;part one&lt;/a&gt;, &lt;a href=&quot;/notes/d3-terraform-graphs-2&quot;&gt;part two&lt;/a&gt;, or &lt;a href=&quot;/notes/terraform-graphs-3&quot;&gt;part three&lt;/a&gt; of this series; or to &lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;GitHub&lt;/a&gt;, where &lt;em&gt;&lt;a href=&quot;/blast-radius-docs&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt; is hosted.&lt;/p&gt;

&lt;h3 id=&quot;terraform-modules&quot;&gt;Terraform Modules&lt;/h3&gt;

&lt;p&gt;Modules greatly simplify Terraform administration, by isolating reusable components. Earlier versions of &lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; didn’t handle modules very well, or at all.&lt;/p&gt;

&lt;p&gt;For a &lt;a href=&quot;https://28mm.github.io/notes/echo-location&quot;&gt;recent project&lt;/a&gt;,&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; I wanted to launch a single AWS instance in a large number of AWS regions; a perfect fit for modules. Here is a single instance of that module, launched in the AWS &lt;code class=&quot;highlighter-rouge&quot;&gt;us-east-1&lt;/code&gt; region, and named the same.&lt;/p&gt;

&lt;div id=&quot;demo2&quot;&gt;&lt;/div&gt;

&lt;p&gt;Here’s the same module reused to launch copies of that instance in both &lt;code class=&quot;highlighter-rouge&quot;&gt;us-east-1&lt;/code&gt; (Northern Virginia), and &lt;code class=&quot;highlighter-rouge&quot;&gt;ap-northeast-2&lt;/code&gt; (Seoul).&lt;/p&gt;

&lt;div id=&quot;demo3&quot;&gt;&lt;/div&gt;

&lt;p&gt;And, here is the same module reused to launch instances in seven regions. This graph in particular highlights the limitations of the visual language used: it is &lt;em&gt;too&lt;/em&gt; colorful, and &lt;em&gt;too&lt;/em&gt; broad. Illegible, in other words.&lt;/p&gt;

&lt;div id=&quot;demo4&quot;&gt;&lt;/div&gt;

&lt;p&gt;Something like Terraform’s &lt;code class=&quot;highlighter-rouge&quot;&gt;--module-depth&lt;/code&gt; parameter would simplify larger diagrams like this one. Better handling of the module registry and other remote sources, is needed as well… but it’s a start.&lt;/p&gt;

&lt;h3 id=&quot;narrowing-some-figures&quot;&gt;Narrowing (Some) Figures&lt;/h3&gt;

&lt;p&gt;In previous posts, I’ve described the tendency for Graphviz layouts of Terraform graphs to sprawl sideways. Some of this is unavoidable, but gains can be realized at the expense of vertical scrolling.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Variable&lt;/em&gt; resources often share a parent. Rather than lay these variables out side by side, they could be “stacked,” one atop the other, without sacrificing clarity.&lt;/p&gt;

&lt;div id=&quot;demo11&quot;&gt;&lt;/div&gt;

&lt;p&gt;(&lt;em&gt;Output&lt;/em&gt; resources often share the same (single) dependency, and parent, and can be “stacked” in the same way. This figure demonstrates that possibility, as well.)&lt;/p&gt;

&lt;h3 id=&quot;code--examples&quot;&gt;Code &amp;amp; Examples&lt;/h3&gt;

&lt;p&gt;The code used to produce these figures can be found on GitHub, as the &lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt; project.&lt;/p&gt;

&lt;p&gt;Further examples–most of them borrowed from examples/ directories in the Terraform provider ecosystem–can be found on the project’s &lt;a href=&quot;/blast-radius-docs/&quot;&gt;documentation&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;If you’re interested in testing &lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt; in your environment, you can obtain an experimental distribution from the Python Package Index.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;brew install graphviz
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;pip3 install blastradius
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or clone the GitHub repository, and install an edtitable copy (via &lt;code class=&quot;highlighter-rouge&quot;&gt;pip3 -e&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;git clone https://github.com/28mm/blast-radius.git
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;blast-radius
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;pip3 install -e .
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt; requires an &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;-ed Terraform project to run.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;path/to/terraform/project
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;terraform init
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;blast-radius --serve
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;While I’m pleased &lt;em&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;Blast Radius&lt;/a&gt;&lt;/em&gt;, as an exploratory project, more work is needed to make it generally useful. In particular, I’d like to shore up module support, do smarter tooltip layouts, and make it easier to embed figures.&lt;/p&gt;

&lt;p&gt;What do you think?
&lt;strong&gt;Comment&lt;/strong&gt; and &lt;strong&gt;Suggestion&lt;/strong&gt; to &lt;strong&gt;&lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-2/js/d3-tip.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-3/terraform-graph.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-3/categories.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;

// use the oldest version of svg_activate
svg_activate('div#demo1', 
    '/assets/terraform-graphs-3/demo-1.svg', 
    '/assets/terraform-graphs-3/demo-1.json',
    '65%');


svg_activate('div#demo2', 
    '/assets/terraform-graphs-3/demo2.svg', 
    '/assets/terraform-graphs-3/demo2.json',
    '100%');

svg_activate('div#demo3', 
    '/assets/terraform-graphs-3/demo3.svg', 
    '/assets/terraform-graphs-3/demo3.json',
    '100%');

svg_activate('div#demo4', 
    '/assets/terraform-graphs-3/demo4.svg', 
    '/assets/terraform-graphs-3/demo4.json',
    '100%');

svg_activate('div#demo11', 
    '/assets/terraform-graphs-3/demo11.svg', 
    '/assets/terraform-graphs-3/demo11.json',
    '65%');


&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;https://www.github.com/28mm/blast-radius&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;This project attempts to geolocate IPs by measuring latency from points around the world. &lt;a href=&quot;https://28mm.github.io/notes/echo-location&quot;&gt;https://28mm.github.io/notes/echo-location&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-12-01T23:00:00-08:00</pubDate>
          <link>http://localhost:4000/notes/terraform-graphs-3</link>
          <guid isPermaLink="true">http://localhost:4000/notes/terraform-graphs-3</guid>
        </item>
      
    
      
        <item>
          <title>Exploring Terraform Graphs With D3.js Part 2</title>
          <description>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/terraform-graphs-2/style.css&quot; /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;This is the second in a series of posts exploring methods of visualizing Terraform dependency graphs, with the goal of producing a tool useful for learning and documentation. (&lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;part one&lt;/a&gt;, &lt;a href=&quot;/notes/d3-terraform-graphs-2&quot;&gt;part two&lt;/a&gt;, &lt;a href=&quot;/notes/terraform-graphs-3&quot;&gt;part three&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;code&lt;/a&gt;.)&lt;/p&gt;

&lt;div id=&quot;demo1&quot;&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;first post&lt;/a&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; presented experiments with Graphviz and D3.js, resulting in a promising prototype. Posting these to &lt;a href=&quot;https://www.reddit.com/r/devops/comments/783prc/exploring_terraform_graphs_with_d3js/&quot;&gt;r/devops&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; led to some interesting discussions (online and off), and thoughts about future work.&lt;/p&gt;

&lt;p&gt;This post takes up the problems of horizontal sprawl, better tooltips, meaningful coloration, and animations; starting with diagrams like the one above, and introducing a series of refinements.&lt;/p&gt;

&lt;h3 id=&quot;reconciling-graphviz-and-d3js&quot;&gt;Reconciling Graphviz and D3.js&lt;/h3&gt;

&lt;p&gt;Graphviz has one thing going for it, so far: its layouts. It can place nodes in order of their dependencies (top to bottom, in this case), whereas the D3.js experiments sometimes became crowded and disorderly.&lt;/p&gt;

&lt;p&gt;However, compared with D3.js, its output is static, dated (1970s, I’d venture), and given to sprawling sideways. What about a combination of the two, using graphviz for layout and D3.js for interactions?&lt;/p&gt;

&lt;style&gt;
div#demo1 &gt; svg {
       height: 400px;
       display: block;
       margin: auto;
}

&lt;/style&gt;

&lt;div id=&quot;demo3&quot;&gt;&lt;/div&gt;

&lt;p&gt;Not bad. Moving resource types to seperate headings reduces overall figure width by 25%, on average, and coloration draws the eye to related resources, regardless of layout.&lt;/p&gt;

&lt;h3 id=&quot;better-tooltips&quot;&gt;Better Tooltips&lt;/h3&gt;

&lt;p&gt;Tooltips present further opportunities for improvement. Thus far, they’ve shown resource definitions, only. It might be nice if they were extended with clear labels, and a list of direct dependencies.&lt;/p&gt;

&lt;div id=&quot;tooltip-demo-1&quot;&gt;&lt;/div&gt;
&lt;style&gt;
div#tooltip-demo-1 &gt; svg {
       height: 600px;
       display: block;
       margin: auto;
}
&lt;/style&gt;

&lt;p&gt;Tooltips could also link to pertinent documentation, implement syntax highlighting, condense verbose definitions (e.g. security groups).&lt;/p&gt;

&lt;h3 id=&quot;meaningful-coloration&quot;&gt;Meaningful Coloration&lt;/h3&gt;

&lt;p&gt;Another question concerns the use of color. Until now, color assignments have been arbitrary, and for the most part, each type of resource has enjoyed its own.&lt;/p&gt;

&lt;p&gt;But this is not entirely satisfying. After a certain threshold, the palette becomes confusing; new colors are not easily distinguished from old ones.&lt;/p&gt;

&lt;p&gt;Grouping resources of related types might help. The aws provider alone supports 320 distinct types of resource in close to 50 categories,&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; but typical configurations probably draw from fewer categories.&lt;/p&gt;

&lt;div id=&quot;demo4&quot;&gt;&lt;/div&gt;

&lt;p&gt;Here, resources of type &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_route&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_internet_gateway&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_security_group&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_subnet&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;aws_vpc&lt;/code&gt; all have the same color because they belong to the &lt;code class=&quot;highlighter-rouge&quot;&gt;vpc&lt;/code&gt; group. Hopefully this will clarify larger diagrams.&lt;/p&gt;

&lt;h3 id=&quot;first-animations&quot;&gt;First Animations&lt;/h3&gt;

&lt;p&gt;With provisional answers to the questions of layout, tooltips, and coloration, animations present new and intriguing possibilities. In the figure below, mousing over a resource highlights its dependencies, only.&lt;/p&gt;

&lt;div id=&quot;demo6&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Compared with the proofs of concept presented the &lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;last post&lt;/a&gt;, these are starting to look useful.&lt;/p&gt;

&lt;p&gt;Aaaand, It’s exciting to begin thinking about further uses of animation, such as presenting &lt;code class=&quot;highlighter-rouge&quot;&gt;terraform apply&lt;/code&gt; progress in realtime, or highlighting the subgraphs affected by a commit.&lt;/p&gt;

&lt;p&gt;Have a Suggestion? &lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt; / &lt;a href=&quot;/about&quot;&gt;about&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;https://d3js.org/d3.v4.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-2/js/fisheye.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-2/js/d3-tip.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs-2/js/terraform-graph.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;

// use the oldest version of svg_activate
svg_activate_old('div#demo1', 
    '/assets/terraform-graphs-2/demo-1.svg', 
    '/assets/terraform-graphs-2/demo-1.json');

svg_activate_old('div#demo2',
    '/assets/terraform-graphs-2/demo-2.svg', 
    '/assets/terraform-graphs-2/demo-2.json');

svg_activate_old('div#demo3',
    '/assets/terraform-graphs-2/demo-3.svg', 
    '/assets/terraform-graphs-2/demo-3.json');


// use the naive color version of svg_activate w/ tooltips
svg_activate_simple('div#tooltip-demo-1',
	'/assets/terraform-graphs-2/tooltip-demo-1.svg',
	'/assets/terraform-graphs-2/tooltip-demo-1.json')


// better-colors version of svg_activate w/tooltips
svg_activate_color('div#demo4',
    '/assets/terraform-graphs-2/demo-3.svg',
    '/assets/terraform-graphs-2/demo-3.json');

//svg_activate_color('div#demo5',
//    '/assets/terraform-graphs-2/demo-5.svg', 
//    '/assets/terraform-graphs-2/demo-5.json');

// current version of svg_activate w/colors w/tooltips w/animations
svg_activate('div#demo6',
    '/assets/terraform-graphs-2/demo-3.svg',
    '/assets/terraform-graphs-2/demo-3.json');


&lt;/script&gt;

&lt;!--
 Below is the default output for a simple configuration.
&lt;img src=&quot;/assets/terraform-graphs/demo-1.svg&quot;&gt;
--&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;http://28mm.github.io/notes/d3-terraform-graphs&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.reddit.com/r/devops/comments/783prc/exploring_terraform_graphs_with_d3js/&quot;&gt;https://www.reddit.com/r/devops/comments/783prc/exploring_terraform_graphs_with_d3js/&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;Per the documentation, &lt;a href=&quot;https://www.terraform.io/docs/providers/aws/index.html&quot;&gt;here&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-10-29T00:00:00-07:00</pubDate>
          <link>http://localhost:4000/notes/d3-terraform-graphs-2</link>
          <guid isPermaLink="true">http://localhost:4000/notes/d3-terraform-graphs-2</guid>
        </item>
      
    
      
        <item>
          <title>Exploring Terraform Graphs With D3.js Part 1</title>
          <description>&lt;h3 id=&quot;tldr&quot;&gt;TL;DR&lt;/h3&gt;

&lt;p&gt;As a newcomer to Terraform (and to AWS), I sometimes find it difficult to reason about the many available resource types, and the dependencies that can exist between them. Especially when coming to terms with larger configurations.&lt;/p&gt;

&lt;p&gt;To address this difficulty, I want a tool to help me explore dependency graphs, and resource definitions, interactively. This is the first in a series (&lt;a href=&quot;/notes/d3-terraform-graphs&quot;&gt;part one&lt;/a&gt;, &lt;a href=&quot;/notes/d3-terraform-graphs-2&quot;&gt;part two&lt;/a&gt;, &lt;a href=&quot;/notes/terraform-graphs-3&quot;&gt;part three&lt;/a&gt;, &lt;a href=&quot;https://www.github.com/28mm/blast-radius&quot;&gt;code&lt;/a&gt;) of posts about building such a tool, using d3.js, starting with the simple example below&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, and building upon it.&lt;/p&gt;

&lt;script src=&quot;/assets/terraform-graphs/js/d3.v3.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/terraform-graphs/js/d3-tip.js&quot;&gt;&lt;/script&gt;

&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/assets/terraform-graphs/style.css&quot; /&gt;

&lt;div id=&quot;demo-1&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;terraform-and-dependency-graphs-introduced&quot;&gt;Terraform and Dependency Graphs, Introduced&lt;/h3&gt;

&lt;p&gt;Terraform is a remarkable piece of software; it’s like Make for infrastructure. Rather than transforming source into libraries and executables, Terraform transforms resource definitions (such as vm instances, dns records, s3 buckets) into running infrastructure.&lt;/p&gt;

&lt;p&gt;Like Make, Terraform walks a dependency graph to determine the order in which it should create resources, to identify what can be done in parallel, and to re-create resources affected by changes.&lt;/p&gt;

&lt;p&gt;Consider the following example, a straightforward Terraform graph–the same as above–laid out by the graphviz package.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/terraform-graphs/demo-1.svg&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This graph is easy to understand because it has only a handful of nodes, and an obvious structure. You can easily find the single instance, its provider (aws, in this case), and the few variables they depend on. Here is a slighly more complex example.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/terraform-graphs/demo-2.svg&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is graph remains fairly legible. But larger examples tend to sprawl, making resources harder to find, and dependencies harder to trace.&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/terraform-graphs/docker-demo-3.svg&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;interactive-dependency-graphs&quot;&gt;Interactive Dependency Graphs&lt;/h3&gt;

&lt;p&gt;These visualizations could be improved in various ways. Adding color, and varying the shapes used, for instance, as well as collapsing less interesting parts of the graph. But an interactive visualization offers these possibilities and more.&lt;/p&gt;

&lt;p&gt;As a reminder of how this might work, here is the first example, again. The root node is made larger than its dependencies, and nodes of different types are assigned colors, according to an arbitrary scheme.&lt;/p&gt;

&lt;div id=&quot;demo-2&quot;&gt;&lt;/div&gt;

&lt;p&gt;And here is is the second. This example is worryingly dense, compared with the Graphviz version, but being able to call up resource definititions with the mouse is a striking advantage.&lt;/p&gt;

&lt;div id=&quot;demo-3&quot;&gt;&lt;/div&gt;

&lt;p&gt;One possible improvement here is to use curved edges, so that their direction is more obvious. (Tracing an edge in the clockwise direction brings you to a dependency.)&lt;/p&gt;

&lt;div id=&quot;demo-4&quot;&gt;&lt;/div&gt;

&lt;p&gt;That’s an encouraging result, but what about a much larger graph, like the sprawling third example?&lt;/p&gt;

&lt;div id=&quot;demo-5&quot;&gt;&lt;/div&gt;

&lt;p&gt;This version is harder to make sense of than the Graphviz version! It contains so many types of resource, for example, that it exhausts the 20-color palette, used previously.&lt;/p&gt;

&lt;p&gt;Additionally, many of the edges overlap, or are drawn so close together, that they become hard to distinguish.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;So far this has been a fun exercise, and I’m satisfied with it as a proof of concept. However, larger configurations remain a problem. In the next post, I plan to take up this problem, and explore possible solutions to it.&lt;/p&gt;

&lt;p&gt;Have a suggestion? &lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;script src=&quot;/assets/terraform-graphs/js/terraform-graph.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
activate('#demo-1', '/assets/terraform-graphs/demo-1.json', 580, 300, false);
activate('#demo-2', '/assets/terraform-graphs/demo-1.json', 580, 300, false);
activate('#demo-3', '/assets/terraform-graphs/demo-3.json', 580, 400, false);
activate('#demo-4', '/assets/terraform-graphs/demo-3.json', 580, 400, true);
activate('#demo-5', '/assets/terraform-graphs/docker-demo-3.json', 580, 600, true);
&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.tf&lt;/code&gt; files borrowed from Udemy’s Terraform course materials, &lt;a href=&quot;https://github.com/wardviaene/terraform-course/tree/master/demo-1&quot;&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Terraform directly supports this type of visualization, through its &lt;code class=&quot;highlighter-rouge&quot;&gt;graph&lt;/code&gt; argument: &lt;code class=&quot;highlighter-rouge&quot;&gt;terraform graph | dot -Tsvg &amp;gt; graph.svg&lt;/code&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.tf&lt;/code&gt; files borrowed from Hashicorp’s aws provider examples, &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-aws&quot;&gt;here&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.tf&lt;/code&gt; files borrowed from Udemy’s Terraform course materials &lt;a href=&quot;https://github.com/wardviaene/terraform-course/tree/master/docker-demo-3&quot;&gt;here&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-10-22T00:00:00-07:00</pubDate>
          <link>http://localhost:4000/notes/d3-terraform-graphs</link>
          <guid isPermaLink="true">http://localhost:4000/notes/d3-terraform-graphs</guid>
        </item>
      
    
      
        <item>
          <title>Photo Metadata and Search on MacOS</title>
          <description>&lt;p&gt;Apple’s Photos.app classifies pictures, identifying subjects such as “boat,” and “bicycle,” as well as settings like “cafe,” and “mountains.” It uses this capability to offer vastly better search than before.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately these improvements are neither visible to Spotlight, nor available in the Finder. This post documents a method of reconciling Photos.app metadata with filesystem metadata, so that they are indexed by Spotlight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I have only tested with MacOS Sierra.&lt;/strong&gt; If you encounter issues, &lt;a href=&quot;/about&quot;&gt;let me know about them&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#xattrs&quot;&gt;The Finder, Extended Attributes, and Spotlight.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#photos-app&quot;&gt;Photos.app Metadata: A SQLite Adventure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reconciliation&quot;&gt;Reconciling Photos.db With Spotlight Indices&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;xattrs&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-finder-extended-attributes-and-spotlight&quot;&gt;The Finder, Extended Attributes, and Spotlight.&lt;/h3&gt;

&lt;p&gt;Quite a bit of old information remains in circulation, about tagging and searching for documents in MacOS. The Finder seems to recognize a few extended attributes, for the purpose of associating tags and comments with files.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;To keep things simple, I will present only the method that has worked for me.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.metadata:_kMDItemUserTags&lt;/code&gt; xattr is used to associate a plist of tags with a file. Spotlight reads this xattr, and indexes its contents. To assign the tags “mountain,” and “alpine” to a file, for instance, you would create a plist:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC
 &quot;-//Apple//DTD PLIST 1.0//EN&quot;
  &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;mountain&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;alpline&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To associate this &lt;code class=&quot;highlighter-rouge&quot;&gt;$plist&lt;/code&gt; with a &lt;code class=&quot;highlighter-rouge&quot;&gt;$file&lt;/code&gt;, invoke the &lt;code class=&quot;highlighter-rouge&quot;&gt;xattr&lt;/code&gt; command, as shown below.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;xattr -w &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.metadata:_kMDItemUserTags&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$plist&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this point, you should be able to find the file, via the 🔎 icon, or the &lt;code class=&quot;highlighter-rouge&quot;&gt;mdfind&lt;/code&gt; command, as shown below.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...]$ mdfind tag:mountain
/path/to/matching/file
/path/to/another/matching/file
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a name=&quot;photos-app&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;photosapp-metadata-a-sqlite-adventure&quot;&gt;Photos.app Metadata: A SQLite Adventure&lt;/h3&gt;

&lt;p&gt;Photos.app does its accounting with a SQLite database, which we’ll call &lt;code class=&quot;highlighter-rouge&quot;&gt;$photodb&lt;/code&gt;, and set thus:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Pictures
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Photo&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;Library.photoslibrary
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;database
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;photodb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/photos.db&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Unfortunately, &lt;code class=&quot;highlighter-rouge&quot;&gt;$photodb&lt;/code&gt; is probably open, and locked.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;lsof &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$photodb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
COMMAND     PID    USER   FD   TYPE DEVICE  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
photolibr 15432 patrick    4u   REG    1,1  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...snip...]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;🤔 The trouble with just killing &lt;code class=&quot;highlighter-rouge&quot;&gt;photolibraryd&lt;/code&gt;, is that it will re-spawn, repeatedly. Undoubtedly, &lt;code class=&quot;highlighter-rouge&quot;&gt;launchd&lt;/code&gt; can be told to disable &lt;code class=&quot;highlighter-rouge&quot;&gt;photolibraryd&lt;/code&gt;, but the approved mechanism wasn’t immediately obvious to me.&lt;/p&gt;

&lt;p&gt;Instead, I opted for an egregious hack. In order to lock its database, &lt;code class=&quot;highlighter-rouge&quot;&gt;photoslibraryd&lt;/code&gt;, need to be able to write to it. I simply removed write permisions.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;chmod -w &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$photodb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;lsof &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$photodb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | 
  awk &lt;span class=&quot;s1&quot;&gt;'{ print $2}'&lt;/span&gt;    | 
  egrep -v PID         | 
  xargs &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Afterwards–but not yet–don’t forget to restore write permissions&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; to your photos database! You may want to restart your computer to ensure that &lt;code class=&quot;highlighter-rouge&quot;&gt;photolibraryd&lt;/code&gt;, continues to work.&lt;/p&gt;

&lt;p&gt;Now, it’s possible to open &lt;code class=&quot;highlighter-rouge&quot;&gt;$photodb&lt;/code&gt;, and poke around.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;sqlite3 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$photodb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
SQLite version 3.14.0 2016-07-26 15:17:14
Enter &lt;span class=&quot;s2&quot;&gt;&quot;.help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;usage hints.
&lt;span class=&quot;gp&quot;&gt;sqlite&amp;gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Review the schema with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.schema&lt;/code&gt; command. Quit by sending &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl-d&lt;/code&gt;, or with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.quit&lt;/code&gt; command. Tags (and a lot else) are kept in the &lt;code class=&quot;highlighter-rouge&quot;&gt;RKVersion_stringNote&lt;/code&gt; table.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sqlite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sqlite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKVersion_stringNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We need to find the appropriate value of &lt;code class=&quot;highlighter-rouge&quot;&gt;keyPath&lt;/code&gt;, since this will vary between systems. The following snippet, should suffice to find it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;KEYPATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt; sqlite3 &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$photodb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; .schema       | 
  grep &lt;span class=&quot;s1&quot;&gt;'RKVersion_stringNote_skIndexUpdateTrigger'&lt;/span&gt; | 
  grep -Eo &lt;span class=&quot;s1&quot;&gt;'[0-9]{1,4}'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Okay, but did it work?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...] echo $KEYPATH
719
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can find the strings containing our tags, and associate them with filesystem paths. Be sure to substitute the value of &lt;code class=&quot;highlighter-rouge&quot;&gt;$KEYPATH&lt;/code&gt; determined above, for the literal &lt;code class=&quot;highlighter-rouge&quot;&gt;719&lt;/code&gt;, below.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sqlite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKMaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKVersion_stringNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKVersion_stringNote&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKMaster&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKVersion_stringNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attachedToId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKMaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modelId&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RKVersion_stringNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;719&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* !!! */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Records will resemble the following:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2015/04/25/20150425-035012/DSC00435.JPG|DSC00435.JPG  \
00435.JPG JPG October 2012 Outdoor Outside Outdoors   \
Outsides Land Lands Mountain Mounts Peak Sierra       \
Sierras Peaks Mountains Mount
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tags aren’t quoted, but always come last. The trouble is that its not obvious which are 1-grams, 2-grams, or n-grams. Various collisions are possible both between tags, and other substrings.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;reconciliation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;reconciling-photosapp-metadata-with-filesystem-metadata&quot;&gt;Reconciling Photos.app metadata with filesystem metadata&lt;/h3&gt;

&lt;p&gt;Okay, lets put the pieces together. We need four things:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;a copy of &lt;code class=&quot;highlighter-rouge&quot;&gt;photos.db&lt;/code&gt; in a write-able location.&lt;/li&gt;
  &lt;li&gt;the system-specific value of &lt;code class=&quot;highlighter-rouge&quot;&gt;$KEYPATH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;the path to our photos library &lt;code class=&quot;highlighter-rouge&quot;&gt;$PHOTOLIB&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;photos2spotlight.py&lt;/code&gt; (listing &lt;a href=&quot;https://gist.github.com/28mm/9820bd8b6eb27555efe9d6f46dd95a81&quot;&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Start by getting an idea of what your library contains:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;./photos2spotlight.py --stats &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --db /path/to/copy/of/photos.db 
  --lib &lt;span class=&quot;s2&quot;&gt;&quot;~/Pictures/Photos&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Library.photoslibrary/&quot;&lt;/span&gt;
  --keypath &lt;span class=&quot;nv&quot;&gt;$KEYPATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...snip...]
    16 Duds
    16 Clothing
    16 Accoutrements
    16 Accoutrement
    16 Clothings
    16 Apparels
    18 Insides
    18 Interior Rooms
    18 Inside
    18 Interior Room
    18 Indoors
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By default, &lt;code class=&quot;highlighter-rouge&quot;&gt;photos2spotlight.py&lt;/code&gt; will make a dry run. Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--write&lt;/code&gt; flag to modify fileystem metadata.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[...]$ &lt;/span&gt;./photos2spotlight.py --stats &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --db /path/to/copy/of/photos.db
  --lib	&lt;span class=&quot;s2&quot;&gt;&quot;~/Pictures/Photos&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Library.photoslibrary/&quot;&lt;/span&gt;
  --keypath &lt;span class=&quot;nv&quot;&gt;$KEYPATH&lt;/span&gt;
  --write
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You should now be able to find photos using Spotlight, the Finder, or the related mdfind command. E.g.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...]$ mdfind 'tag:Inside'
.../Masters/2015/04/22/20150422-011045/IMG_0083.JPG
[...snip...]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That’s it. Macs are easy, right?&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Google Photos does this too. It’s dramatically less tedious than manual tagging.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Both &lt;code class=&quot;highlighter-rouge&quot;&gt;kMDItemFinderComment&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;kMDItemOMUserTags&lt;/code&gt; are commonly suggested, as well. As far as I can tell, the former is inappropriate, while the latter is disused, except by legacy applications.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[...]$ chmod u+w &quot;$photodb&quot;&lt;/code&gt;&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-05-25T00:00:00-07:00</pubDate>
          <link>http://localhost:4000/notes/osx-photo-search</link>
          <guid isPermaLink="true">http://localhost:4000/notes/osx-photo-search</guid>
        </item>
      
    
      
        <item>
          <title>A Quixotic Apartment Search.</title>
          <description>&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lease-less-in-seattle&quot;&gt;Lease-less In Seattle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-many-npr-moments-is-too-many&quot;&gt;How Many NPR Moments is Too Many?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-does-walkability-measure&quot;&gt;What Does Walkability Measure?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#eyes-on-the-street&quot;&gt;Eyes On The Street&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Finding an apartment is a chore like few others. For one thing, it can be difficult to recognize a good deal, without closely following the market. For another, realtors often misrepresent their properties in an effort to make them more attractive.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; It can be exhausting to evaluate the thousands of apartments listed in a busy market, but renting an apartment is &lt;em&gt;significant&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For most of us, rent constitutes a large fraction of income, while our address determines the amount of time we lose commuting, and if we can reasonably bike to work. For these reasons alone, it is worth making a deliberate, rather than improvised search, for a next apartment. Where to start?&lt;/p&gt;

&lt;p&gt;Services like Craigslist and Zillow are like a firehose of listings, brimming with useful information, including: price, area (ft&lt;sup&gt;2&lt;/sup&gt;), floorplan, neighborhood, and pet-tolerance. Perhaps collecting data from these services could help characterize the rental market, and inform an apartment search?&lt;/p&gt;

&lt;h2 id=&quot;lease-less-in-seattle&quot;&gt;Lease-less In Seattle&lt;/h2&gt;

&lt;p&gt;A couple years ago, the blog &lt;a href=&quot;http://chrisholdgraf.com/quick-craigslist-data-analysis/&quot;&gt;Predictably Noisy&lt;/a&gt; carried an analysis of Bay Area rents–based on Craigslist data–with a series of figures showing the relationship between apartment size and price per square foot, as well as the distribution of these two variables. To get started, I reproduced those plots for Seattle.&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/see-ppsf-by-bedrooms.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this figure, price per square foot is plotted against area, and the most common floorplans are assigned a color. Space tends to become cheaper, per unit area, as you rent more of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/see-ppsf-dist.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here we see that apartments of each type are available at a wide range of prices per square foot. (And that studios command sometimes astonishing rents.)&lt;/p&gt;

&lt;p&gt;Immediately north of Seattle, Snohomish County provides an interesting counterpoint. Fewer apartments are listed here, but only a handful cost more than $3/ft&lt;sup&gt;2&lt;/sup&gt;. In fact a majority are available for around $2/ft&lt;sup&gt;2&lt;/sup&gt;, or less.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/sno-ppsf-by-bedrooms.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-many-npr-moments-is-too-many&quot;&gt;How Many NPR Moments Is Too Many?&lt;/h2&gt;

&lt;p&gt;Apartments in Snohomish County are offered for reliably low rates, but another feature they share is a long, dystopian commute into seattle. Jean Luc Godard’s 1967 film, &lt;em&gt;Weekend&lt;/em&gt;, neatly captures the experience.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/weekend.jpg&quot; alt=&quot;Weekend - Jean Luc Godard (1967)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Is a comparison to &lt;em&gt;Weekend&lt;/em&gt; hyperbolic? The &lt;a href=&quot;http://www.wsdot.com&quot;&gt;WSDOT&lt;/a&gt; publish estimated travel times between Lynnwood and Downtown Seattle. I collected these estimates for the first two weeks of May, 2017, and plotted them, below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/traffic.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And this is only southbound traffic. Actual commute times from Snohomish County likely exceed these, because most apartments are neither adjacent to the freeway, nor close to Lynnwood.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h3 id=&quot;is-distance-a-reliable-proxy-for-commute-duration&quot;&gt;Is Distance A Reliable Proxy For Commute Duration?&lt;/h3&gt;

&lt;p&gt;So far, Craigslist data have been enough to get a general picture of the apartment rental market, and WSDOT traffic estimates have been enough to to rule-out Snohomish County, altogether. But, Seattle’s crosstown traffic is no picnic, either.&lt;/p&gt;

&lt;p&gt;Neighborhood and distance are commonly used as proxies for commute duration, which we assume increases with distance. But, how much influence do the vagaries of Seattle’s arterial, and public transit infrastructure, exert?&lt;/p&gt;

&lt;p&gt;To understand these effects, we need greater location precision. On craigslist, the location field is often empty, or uselessly vague. Zillow, on the other hand, is a more reliable source of addresses, and other structured data.&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://developers.google.com/maps/documentation/directions/&quot;&gt;Google Directions API&lt;/a&gt; estimates trip duration, between arbitrary locations. It supports a variety of transit modes (walking, biking, driving, public transit), and can factor expected traffic into its calculations.&lt;/p&gt;

&lt;p&gt;Since I am currently interviewing for jobs,&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; I was interested in the expected commute times from available rentals to prospective offices. I wanted to test the assumption that a nearby apartment offers a shorter commute.&lt;/p&gt;

&lt;p&gt;To that end, the following figures show expected commutes from Zillow-listed apartments in Seattle, to an office in Ballard, by 9:00 AM on a weekday morning. Walking trips are shown in blue; bus trips are colored according to the number of transfers needed, following an obvious pattern.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;figure&quot; src=&quot;http://localhost:4000/assets/seattle-apartments/distance-vs-commute-by-legs.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here we see the expected linear relationship between distance and commute duration. However, there is quite a bit of variance (r&lt;sup&gt;2&lt;/sup&gt; = 0.794). We can conclude that proximity alone is a dubious predictor of time lost riding and transferring between buses.&lt;/p&gt;

&lt;h3 id=&quot;what-about-nearby-apartments&quot;&gt;What About Nearby Apartments?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/dvc-small.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For commutes shorter than 1.7 km, distance more reliably predicts commute duration. Perhaps a walking tour within this radius would locate a suitable apartment more quickly? This approach would be considerably less complicated.&lt;/p&gt;

&lt;p&gt;Ideally, I would find an apartment featuring a short commute (less than a half hour) for less than $2.5/ft&lt;sup&gt;2&lt;/sup&gt;. The figure below presents listings in three adjacent postal codes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/zip-search.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;98107 encompases lower Ballard, and the neighborhood realtors have dubbed &lt;em&gt;Frelard&lt;/em&gt;. Unsurprisingly, it seems to offer the best commute. 98103 extends from Lake Union, in Fremont, to N. 100&lt;sup&gt;th&lt;/sup&gt; St, in Greenwood, and also offers reasonable commutes.&lt;/p&gt;

&lt;p&gt;98199 is a different story. Queen Anne and Magnolia are separated from Ballard and Fremont by only the Ship Canal. These are &lt;em&gt;long&lt;/em&gt; commutes, so I am better off looking North of the Ship Canal.&lt;/p&gt;

&lt;h2 id=&quot;what-does-walkability-measure&quot;&gt;What Does Walkability Measure?&lt;/h2&gt;

&lt;p&gt;Rents and commute durations have proven easy quantities to obtain. And, because of their importance, they form a good basis for comparing listings. But, given a choice, few of us would rent an apartment because it optimized &lt;em&gt;just&lt;/em&gt; these variables.&lt;/p&gt;

&lt;p&gt;In practice, we are concerned with a lot else. For instance, we might want an apartment located close to friends, or one with trustworthy management. But, individually, few of these concerns are as significant, or as easily quantified.&lt;/p&gt;

&lt;p&gt;With that said, I live close to several independent cafés–this being Seattle–and rather enjoy my options. Access to cafés, like these, as well as to grocers, laundromats, and other everyday businesses, is important to me. In realtors’ parlance, I prize &lt;em&gt;walkability&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Walkability indices summarize certain of these secondary concerns in a single comparable quantity. To the extent that they succeed, in this, they promise to reduce the tedium of prioritizing listings.&lt;/p&gt;

&lt;h3 id=&quot;walk-score&quot;&gt;Walk Score&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.walkscore.com/&quot;&gt;Walk Score&lt;/a&gt;, along with the related Bike and Transit Scores, is a proprietary metric promoted by the real estate company, Redfin. The Walk Score associated with an address estimates how easily everyday errands can be accomplished there, without a car.&lt;/p&gt;

&lt;p&gt;Walk Scores are a function of the distances to ammentities in various categories. &lt;a href=&quot;https://en.wikipedia.org/wiki/Walk_Score#cite_note-7&quot;&gt;Wikipedia&lt;/a&gt; have a dated (2013) run-down of the algorthim. My (limited) efforts did not turn up a more recent or authoratative description.&lt;/p&gt;

&lt;p&gt;The following scale is used for interpretation. E.g. since my apartment has a Walk Score of 85, I should be able to accomplish most errands on foot. Evidently my neighborhood is missing something.&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Score&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Interpretation&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;90-100&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Everyday errands are possible without a car&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;70-89&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Most errands can be accomplished on foot&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;50-60&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Some errands can be accomplished on foot&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;25-49&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Most errands require a car&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;0-24&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Almost all errands require a car&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;I had hoped to do more with Walk Score, perhaps using it to exclude certain listings, or give priority to others. Because I wasn’t granted an API key, I decided to look elsewhere. 🤷&lt;/p&gt;

&lt;h3 id=&quot;the-epa-walkability-index&quot;&gt;The EPA Walkability Index&lt;/h3&gt;

&lt;p&gt;I have to admit that I was feeling just a little let down by the private sector, so I turned, instead, to Uncle Sam. The EPA calculate a &lt;a href=&quot;https://developer.epa.gov/walkability-index-2/&quot;&gt;walkability index&lt;/a&gt; for each of the 2010 census block groups.&lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;So, how does walkability vary between census block groups, in Seattle, and what does it measure?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/map.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Outside of a few neighborhoods: Downtown, Belltown, Fremont, Wallingford, parts of Ballard, and Capitol Hill, the EPA estimate middling walkability across Seattle.&lt;/p&gt;

&lt;p&gt;Certainly, the highest ranked neighborhoods &lt;em&gt;are&lt;/em&gt; walkable, but I expected others to score higher than they did. Just what are we looking at? Certainly not &lt;em&gt;my&lt;/em&gt; assessments. The EPA walkability index is a weighted combination of terms drawn from the EPA’s &lt;a href=&quot;https://www.epa.gov/smartgrowth/smart-location-mapping#walkability&quot;&gt;Smart Location Database&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The full documentation is worth reading, but I will briefly highlight four terms of interest.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#density&quot;&gt;Density&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#land-use-diversity&quot;&gt;Land use diversity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#distance-to-fixed-guideway-transit&quot;&gt;Distance to fixed-guideway transit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#destination-accessibility&quot;&gt;Destination accessibility&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;density&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-density&quot;&gt;1. Density&lt;/h4&gt;

&lt;p&gt;Here, density can refer to housing units per acre, or residents per acre, in areas where development &lt;em&gt;can&lt;/em&gt; occur. Because public parks, zoos, beaches, and cemeteries cannot be developed, their area is subtracted from the total area of the block group.&lt;/p&gt;

&lt;p&gt;The exclusion of protected areas from the density term may explain the otherwise surprising coloration of the block groups containing &lt;em&gt;Seward&lt;/em&gt;, &lt;em&gt;Discovery&lt;/em&gt;, and &lt;em&gt;Carkeek&lt;/em&gt; Parks.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;land-use-diversity&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;2land-use-diversity&quot;&gt;2.Land use diversity&lt;/h4&gt;

&lt;p&gt;Jane Jacobs advocated for neighborhoods that support diverse uses, i.e. both residential, and commercial. Employment and population aggregates combine to measure this diversity.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;E = [\sum_{i=1}^{4} P_{i}*ln(P_{i})] /ln(n)&lt;/script&gt;

&lt;p&gt;Values of &lt;script type=&quot;math/tex&quot;&gt;P_{i}&lt;/script&gt; reflect the number of jobs in 3 sectors, and the number of residents: (1) commercial, industrial, and instituational jobs, (2) retail jobs, (3) recreational jobs, and (4) resdients.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;distance-to-fixed-guideway-transit&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-distance-to-fixed-guideway-transit&quot;&gt;3. Distance to fixed-guideway transit&lt;/h4&gt;

&lt;p&gt;Fixed guideway, here, refers to rail, light rail, subways, ferries, and trollies, but &lt;em&gt;not&lt;/em&gt; buses. Rather than a distance, this metric counts the number of fixed-guideway transit stations within 1/4 mile, and 1/2 mile.&lt;/p&gt;

&lt;p&gt;Seattle is interesting because it has many more bus routes (including so-called &lt;em&gt;bus rapid transit&lt;/em&gt;) than it has fixed-guideway routes. Additionally, its street cars and monorail are completely useless (although some will disagree).&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;destination-accessibility&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;4-destination-accessibility&quot;&gt;4. Destination accessibility&lt;/h4&gt;

&lt;p&gt;Destination accessibility measures, on the one hand, how many working age residents of nearby census tracts can access jobs in a given block group via different modes of transportation. On the other it measures the accessability of jobs in nearby census tracts to residents of the given block group.&lt;/p&gt;

&lt;h4 id=&quot;application-of-the-epa-walkability-index&quot;&gt;Application of the EPA walkability index&lt;/h4&gt;

&lt;p&gt;The EPA walkability index is a good case study in the creation of such an index, and is probably useful to its intended audience of city planners. However, it isn’t well suited to helping choose between apartments.&lt;/p&gt;

&lt;p&gt;For one thing, the calculated walkability of neighboring block groups often varies. What would happen if their borders moved, or shrank? Esepcially along the borders of census block groups, these differences give a distorted picture of actual walkability.&lt;/p&gt;

&lt;p&gt;The data are old. The last census was taken in 2010, and Seattle has changed, considerably, since then. For starters, its density has increased, and more fixed guideway transit exists.&lt;/p&gt;

&lt;p&gt;Nevertheless, it has nice qualities. Not least of these: it’s derived from easily understood terms. As I think about what I want from a walkable neighborhood, I am glad to have adaptable public domain tools, where I might otherwise depend on proprietary solutions, like Walk Score.&lt;/p&gt;

&lt;h2 id=&quot;eyes-on-the-street&quot;&gt;Eyes On The Street&lt;/h2&gt;

&lt;p&gt;We can see many of Jane Jacobs’ views reflected in tools like Walk Score and The EPA’s Walkability Index, but her methods are at least as interesting.&lt;/p&gt;

&lt;p&gt;Essentially, Jacobs advocated for close observation. The illustation credit to her &lt;em&gt;Death and Life of Great American Cities&lt;/em&gt;, reads:&lt;/p&gt;

&lt;blockquote&gt;
&quot;The scenes that illustrate this book are all about us. For illustrations, please look closely at real cities. While you are looking, you might as well listen, linger, and think about what you see.&quot;
&lt;/blockquote&gt;

&lt;p&gt;And, in the following pages, she offers a suggestion about what we can hope to discover, by paying attention to the &lt;em&gt;look of things&lt;/em&gt;, namely: &lt;em&gt;the way they work&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
 &quot;the look of things and the way they work are inextricably bound together...&quot;
&lt;/blockquote&gt;

&lt;p&gt;Measures of walkability depend on demographics, land use, and transit, in part because these quanitities are readily available, and easy to work with. They can’t as easily consider &lt;em&gt;the look of things&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Compared with measures like these, field observations would be expensive to make, and confounding to work with. Thats an oft repeated assumption, at least, but recent advances in computer vision could challange it.&lt;/p&gt;

&lt;h3 id=&quot;general-image-classification&quot;&gt;General Image Classification&lt;/h3&gt;

&lt;p&gt;For a first experiment, I collected several hundred pictures each, of three distinctive neighborhoods: the &lt;em&gt;&lt;font color=&quot;#4e73b0&quot;&gt;Lower East Side&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;&lt;font color=&quot;#68ae7c&quot;&gt;Le Marais&lt;/font&gt;&lt;/em&gt;, and San Francisco’s &lt;em&gt;&lt;font color=&quot;#c45155&quot;&gt;Mission District&lt;/font&gt;&lt;/em&gt;. I wanted to know if a general image classifier would identify the unique visual character of these neighborhoods.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/google-tsne.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the figure above, each picture was processed by Google’s &lt;a href=&quot;https://cloud.google.com/vision/&quot;&gt;Cloud Vision API&lt;/a&gt;&lt;sup id=&quot;fnref:8&quot;&gt;&lt;a href=&quot;#fn:8&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt; to produce a vector of confidence scores (i.e. the confidence that a picture depicts a given subject). &lt;em&gt;In other words, they’re grouped by subject, to the extent that an image classifier has made sense of them.&lt;/em&gt;&lt;sup id=&quot;fnref:9&quot;&gt;&lt;a href=&quot;#fn:9&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Because I sampled pictures from Bing Image Search, they reflect what people have found interesting in each neighborhood. In the &lt;em&gt;&lt;font color=&quot;#c45155&quot;&gt;Mission District&lt;/font&gt;&lt;/em&gt;, murals make a popular subject (you can see this cluster in the lower left), while fire escapes feature in many photographs of the &lt;em&gt;&lt;font color=&quot;#4e73b0&quot;&gt;Lower East Side&lt;/font&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It’s worth noting that Google’s Cloud Vision API lacks some of Jacobs’ descriptive genius. Where Jacobs saw “promenades that go from no place to nowhere, and have no promenaders,” software might instead report &lt;em&gt;buildings&lt;/em&gt;, and &lt;em&gt;atmospheric phenomena&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In some places, as with murals in the &lt;em&gt;&lt;font color=&quot;#c45155&quot;&gt;Mission&lt;/font&gt;&lt;/em&gt;, pictures of a certain neighborhood cluster together. Isolated clusters indicate something unique, either about that neighborhood or the pictures chosen to represent it.&lt;/p&gt;

&lt;p&gt;Conversely, areas where pictures from different neighborhoods overlap suggest more generic subjects that might be found in any neighborhood: &lt;em&gt;buildings&lt;/em&gt;, &lt;em&gt;people&lt;/em&gt;, and &lt;em&gt;cars&lt;/em&gt;, for instance.&lt;/p&gt;

&lt;p&gt;And what of Seattle’s &lt;em&gt;&lt;font color=&quot;#4e73b0&quot;&gt;Capitol Hill&lt;/font&gt;&lt;/em&gt;, &lt;em&gt;&lt;font color=&quot;#68ae7c&quot;&gt;Belltown&lt;/font&gt;&lt;/em&gt;, and &lt;em&gt;&lt;font color=&quot;#c45155&quot;&gt;Ballard&lt;/font&gt;&lt;/em&gt; neighborhoods? I would’ve hoped for more distinct groupings. For example, old brick buildings get grouped with new ones.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/seattle-apartments/google-tsne-seattle.png&quot; class=&quot;figure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A general image classifier may be the wrong tool. A human observer given the same task would likely identify different features in each picture, and arrange them according to a different logic.&lt;/p&gt;

&lt;p&gt;A more fruitful approach might involve a domain specific model, trained to identify features of particular interest: distinguishing between different kinds of building, for instance, or registering eyesores of various description.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It took just a little code to scrape and interrogate an interesting dataset, with considerable relevance to my daily life. Happily, my initial focus on rents and commuting yielded the most benefit for the least work.&lt;/p&gt;

&lt;p&gt;Looking past these first experiments, towards the complexities of neighborhoods and urban design, has been no less interesting. However, for a greater investment of effort, I have less to show. Neighborhood trivia, and a few GIS tricks, for instance, but nothing directly useful.&lt;/p&gt;

&lt;p&gt;A lot could still be done, in this more quixotic direction. Urban life raises many intriguing questions; public-ish data and simple methods may answer some of them.&lt;/p&gt;

&lt;p&gt;However, in the face of diminishing returns, I exect I’ll move my apartment search back into meatspace— knowing, at least, that I won’t have my time wasted by as many bogus listings.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Realtors engage in photographic trickery, commonly using fisheye lenses and manipulated colors, to give false impressions. Furthermore, they often mis-state the proximity of their properties to public transportation, popular neighborhoods, and major employers.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;To collect enough listings for this project, I used &lt;a href=&quot;https://github.com/juliomalegria/python-craigslist&quot;&gt;python-cragislist&lt;/a&gt;, and &lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;BeautifulSoup4&lt;/a&gt; to retrieve and parse them, and a &lt;a href=&quot;https://www.sqlite.org/&quot;&gt;sqlite&lt;/a&gt; database, for persistent storage.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;In fact, most apartments in Lynnwood are listed on the see (Seattle) Craigslist, rather than the sno (Snohomish County) Craigslist. Most sno listings are further north.&amp;nbsp;&lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;Zillow use javascript and asynchronous loading techniques extensively on their website, making it more difficult to scrape. I used &lt;a href=&quot;http://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt;, and &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/downloads&quot;&gt;ChromeDriver&lt;/a&gt; to collect listings.&amp;nbsp;&lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;Considering &lt;em&gt;systems administration&lt;/em&gt; and &lt;em&gt;systems engineering&lt;/em&gt; roles, in the Seattle area. Email me: &lt;a href=&quot;mailto:patrick.mcmurchie@gmail.com&quot;&gt;patrick.mcmurchie@gmail.com&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;Looking closer at my apartment’s Walk Score, it appears to lack nearby &lt;em&gt;entertainment&lt;/em&gt;. My current activity– &lt;em&gt;blogging&lt;/em&gt;– doesn’t suggest otherwise.&amp;nbsp;&lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;Census blocks are the smallest geographic unit used for the US Census. Block groups are composed of census blocks, and are the smallest unit for which the Census publish aggregate data. Tracts are larger.&amp;nbsp;&lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:8&quot;&gt;
      &lt;p&gt;I tried the same exercise with equivalent APIs from Clarifai, Amazon, and Microsoft, with superficially similiar results, but have not probed deeply.&amp;nbsp;&lt;a href=&quot;#fnref:8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:9&quot;&gt;
      &lt;p&gt;Dimensionality reduction was accomplished with &lt;a href=&quot;https://lvdmaaten.github.io/tsne/&quot;&gt;t-SNE&lt;/a&gt;, as implemented in &lt;a href=&quot;http://scikit-learn.org/stable/&quot;&gt;scikit-learn&lt;/a&gt;.&amp;nbsp;&lt;a href=&quot;#fnref:9&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
          <pubDate>2017-05-23T00:00:00-07:00</pubDate>
          <link>http://localhost:4000/notes/a-quixotic-apartment-search</link>
          <guid isPermaLink="true">http://localhost:4000/notes/a-quixotic-apartment-search</guid>
        </item>
      
    
  </channel>
</rss>
